/** 
 * Name: Chris Carpio
 * login id: 05carpio
 * Student ID: 994954518
 */

import javax.swing.*;
import javax.swing.border.*;
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import java.lang.*;

/**
 * The TilePuzzleWindow class sets up a window that communicates with the other
 * aspects of the TilePuzzle classes to set up a graphical uses interface for
 * the game puzzle.
 */
public class TilePuzzleWindow extends JFrame {
  
  /**
   * A TilePuzzle variable that holds the said object.
   */
  private TilePuzzle puzzle;
  
  /**
   * An int variable that holds the row length of the puzzle grid.
   */
  private int rowLength;
  
  /**
   * A variable that contains the length of the columns on the grid.
   */
  private int columnLength;
  
  /**
   * A 2D integer array that holds the values of the tile puzzle.
   */
  private int[][] nums;
  
  /**
   * A 2D JLabel array that holds the lables for the interface.
   */
  private JLabel[][] grid;
  
  /**
   * A TileListener object that communicates to the window via
   * mouse clicks.
   */
  private TileListener currListen;
  
  /**
   * A Container object that holds the layout and contents of the window.
   */
  private Container substance;
  
  /**
   * The constructor for the TilePuzzleWindow class. It accepts a
   * <code>TilePuzzle</code> and <code>TileListener</code> object
   * and uses it to initilize it's own values. It also sets the
   * grid layout for the JFrame and sets the initial values for
   * the grid. It defines the graphical characteristics as well.
   * @param currPuz The <code>TilePuzzle</code> object.
   * @param listen The <code>TileListener</code> object.
   */
  public TilePuzzleWindow(TilePuzzle currPuz, TileListener listen) {
    puzzle = currPuz;
    nums = puzzle.getGrid();
    rowLength = nums.length;
    columnLength = nums[0].length;
    currListen = listen;
    substance = this.getContentPane();
    substance.setLayout(new GridLayout(rowLength, columnLength));
    substance.setBackground(Color.BLACK);
    grid = new JLabel[rowLength + 1][columnLength + 1];    
    for (int i = 0; i < rowLength; i++) {
      for (int j = 0; j < columnLength; j++) {
        grid[i][j] = new JLabel(nums[i][j] + "");
        grid[i][j].setBorder(new LineBorder(Color.GREEN));
        grid[i][j].setHorizontalAlignment(SwingConstants.CENTER);
        grid[i][j].setVerticalAlignment(SwingConstants.CENTER);
        grid[i][j].addMouseListener(listen);
        grid[i][j].setForeground(Color.GREEN);
        if (nums[i][j] == -1) {
         grid[i][j].setForeground(Color.BLACK);
        }
        substance.add(grid[i][j]);
      }
    }
    setTitle("That stupid game");
    pack();
    setSize(640, 480);
    setVisible(true);
  }
  
  /**
   * The setLabels method updates the labels on the grid according to the
   * given 2D integer array. It also detects the blank space, the -1 value,
   * and sets it to be not visible.
   * @param nums the 2D integer array.
   */
  public void setLabels(int[][] nums) {
     for (int i = 0; i < rowLength; i++) {
      for (int j = 0; j < columnLength; j++) {
        grid[i][j].setText(nums[i][j] + "");
        grid[i][j].setForeground(Color.GREEN);
        if (nums[i][j] == -1) {
          grid[i][j].setForeground(Color.BLACK);
        }
      }
    }
  }
  
  
  
  
}